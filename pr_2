public class Practical2 {

    // Start counter
    int counter = 1;

    static int p;

    //  print odd numbers
    public void printOddNumber() {
        synchronized (this) {
            // Print number till the p
            while (counter < p) {

                // count even then print
                while (counter % 2 == 0) {

                    try {
                        wait();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

                // Print the number
                System.out.print(counter + " ");

                // Increment
                counter++;

                // 2nd thread
                notify();
            }
        }
    }

    // Function to print even numbers
    public void printEvenNumber() {
        synchronized (this) {
            // Print number till the p
            while (counter < p) {

                //  count is odd then print
                while (counter % 2 == 1) {

                    // Exception handle
                    try {
                        wait();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

                // Print the number
                System.out.print(
                        counter + " ");

                // Increment counter
                counter++;

                //  2nd thread
                notify();
            }
        }
    }

    // Driver Code
    public static void main(String[] args) {
        // Given Number p
        p = 10;

        // Create an object of class
        Practical2 mt = new Practical2();

        // Create thread t1
        Thread t1 = new Thread(new Runnable() {
            public void run() {
                mt.printEvenNumber();
            }
        });

        // Create thread t2
        Thread t2 = new Thread(new Runnable() {
            public void run() {
                mt.printOddNumber();
            }
        });

        // Start both threads
        t1.start();
        t2.start();
    }
}

